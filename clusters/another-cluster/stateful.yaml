apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: rabbit
    app.kubernetes.io/created-by: kustomization-controller
    app.kubernetes.io/managed-by: fluxcd
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/part-of: abc
    app.kubernetes.io/version: 3.8.17
    me: you
    application: rabbitmq
  name: web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: rabbit
      app.kubernetes.io/created-by: kustomization-controller
      app.kubernetes.io/managed-by: fluxcd
      app.kubernetes.io/name: rabbitmq
      app.kubernetes.io/part-of: abc
      app.kubernetes.io/version: 3.8.17
      application: rabbitmq
      me: you
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 3 # by default is 1
  # minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app.kubernetes.io/component: rabbit
        app.kubernetes.io/created-by: kustomization-controller
        app.kubernetes.io/managed-by: fluxcd
        app.kubernetes.io/name: rabbitmq
        app.kubernetes.io/part-of: abc
        app.kubernetes.io/version: 3.8.17
        application: rabbitmq
        me: you
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      # minReadySeconds: 3600
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: k8s.gcr.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
  #       volumeMounts:
  #       - name: www
  #         mountPath: /usr/share/nginx/html
  # volumeClaimTemplates:
  # - metadata:
  #     name: www
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     resources:
  #       requests:
  #         storage: 1Gi